<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Csharps on Rain Hu&#39;s Workspace</title>
    <link>http://localhost:1313/csharp/</link>
    <description>Recent content in Csharps on Rain Hu&#39;s Workspace</description>
    <generator>Hugo -- 0.139.2</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 22 Jul 2023 20:59:57 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/csharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[C#] Large Object Heap</title>
      <link>http://localhost:1313/csharp/loh/</link>
      <pubDate>Sat, 22 Jul 2023 20:59:57 +0800</pubDate>
      <guid>http://localhost:1313/csharp/loh/</guid>
      <description>Introduction to Large Object Heap</description>
    </item>
    <item>
      <title>[CS] Sample cost for performance test</title>
      <link>http://localhost:1313/csharp/performancetest/</link>
      <pubDate>Tue, 16 May 2023 21:26:24 +0800</pubDate>
      <guid>http://localhost:1313/csharp/performancetest/</guid>
      <description>&lt;h3 id=&#34;sample-code-for-stop-watch&#34;&gt;Sample code for stop watch&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Csharp&#34; data-lang=&#34;Csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Data;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Linq;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Runtime.CompilerServices;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Data.Common;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Diagnostics;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Drawing;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Text;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; Rainspace.PlayGround
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Program&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Main(&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;[] args)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Stopwatch sw = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Stopwatch();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sw.Start();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============Accumulate1==============&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Result: &amp;#34;&lt;/span&gt; + Accumulate(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sw.Stop();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time cost: &amp;#34;&lt;/span&gt; + (sw.ElapsedTicks/&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0e6&lt;/span&gt;).ToString() + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sw.Reset();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sw.Start();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;==============Accumulate2==============&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Result: &amp;#34;&lt;/span&gt; + Accumulate(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sw.Stop();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time cost: &amp;#34;&lt;/span&gt; + (sw.ElapsedTicks/&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0e6&lt;/span&gt;).ToString() + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; Accumulate(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; begin, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; end, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; sum = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; res = sum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (end &amp;lt; begin) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Accumulate(end, begin, sum);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i = begin; i &amp;lt; end; i++) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                res += i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; Accumulate2(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; begin, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; end, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; sum = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; res = (begin + end) * (end - begin) / &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res + sum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>[C#] C#3、LINQ 及相關特性</title>
      <link>http://localhost:1313/csharp/linq_props/</link>
      <pubDate>Mon, 01 May 2023 14:10:48 +0800</pubDate>
      <guid>http://localhost:1313/csharp/linq_props/</guid>
      <description>Introduction to LINQ in C#</description>
    </item>
    <item>
      <title>[C#] Namespace Alias 命名空間別名</title>
      <link>http://localhost:1313/csharp/namespace_alias/</link>
      <pubDate>Tue, 28 Feb 2023 22:51:08 +0800</pubDate>
      <guid>http://localhost:1313/csharp/namespace_alias/</guid>
      <description>Namespace alias in C#</description>
    </item>
    <item>
      <title>[C#] Property getter/setter access separate 訪問權限分離</title>
      <link>http://localhost:1313/csharp/getter_setter_access_separate/</link>
      <pubDate>Tue, 28 Feb 2023 22:18:25 +0800</pubDate>
      <guid>http://localhost:1313/csharp/getter_setter_access_separate/</guid>
      <description>Separate getter/setter property access in C#</description>
    </item>
    <item>
      <title>[C#] static class 靜態類別</title>
      <link>http://localhost:1313/csharp/static/</link>
      <pubDate>Tue, 28 Feb 2023 21:08:01 +0800</pubDate>
      <guid>http://localhost:1313/csharp/static/</guid>
      <description>Introduction to static class in C#</description>
    </item>
    <item>
      <title>[C#] C# 筆記</title>
      <link>http://localhost:1313/csharp/csharp/</link>
      <pubDate>Tue, 28 Feb 2023 18:49:39 +0800</pubDate>
      <guid>http://localhost:1313/csharp/csharp/</guid>
      <description>Notes for C#</description>
    </item>
    <item>
      <title>[C#] Partial Type 局部類型</title>
      <link>http://localhost:1313/csharp/partial/</link>
      <pubDate>Tue, 28 Feb 2023 15:11:11 +0800</pubDate>
      <guid>http://localhost:1313/csharp/partial/</guid>
      <description>Introduction to partial class ans partial method in C#</description>
    </item>
    <item>
      <title>[C#] IEnumerable &amp; IEnumerator 迭代器</title>
      <link>http://localhost:1313/csharp/iterator/</link>
      <pubDate>Mon, 27 Feb 2023 11:50:20 +0800</pubDate>
      <guid>http://localhost:1313/csharp/iterator/</guid>
      <description>Introduction to Iterator in C#, including IEnumerator and IEnumerable</description>
    </item>
    <item>
      <title>[C#] Delegate 委派</title>
      <link>http://localhost:1313/csharp/delegate/</link>
      <pubDate>Sun, 26 Feb 2023 19:24:56 +0800</pubDate>
      <guid>http://localhost:1313/csharp/delegate/</guid>
      <description>Introduction to Delegate in C#</description>
    </item>
    <item>
      <title>[C#] Nullable 可空值類型</title>
      <link>http://localhost:1313/csharp/nullable/</link>
      <pubDate>Thu, 23 Feb 2023 21:40:03 +0800</pubDate>
      <guid>http://localhost:1313/csharp/nullable/</guid>
      <description>Introduction to Nullable in C#</description>
    </item>
    <item>
      <title>[C#] Generic 泛型</title>
      <link>http://localhost:1313/csharp/generic/</link>
      <pubDate>Wed, 22 Feb 2023 21:39:56 +0800</pubDate>
      <guid>http://localhost:1313/csharp/generic/</guid>
      <description>Introduction to Generic in C#</description>
    </item>
    <item>
      <title>[C#] Yield Return</title>
      <link>http://localhost:1313/csharp/yield/</link>
      <pubDate>Sun, 01 Jan 2023 21:40:25 +0800</pubDate>
      <guid>http://localhost:1313/csharp/yield/</guid>
      <description>Introduction to yield return in C#, and the background of IEnumerable and IEnumerator </description>
    </item>
  </channel>
</rss>
