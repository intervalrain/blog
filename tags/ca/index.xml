<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>CA on Rain's Blog</title><link>http://intervalrain.github.io/tags/ca/</link><description>Recent content in CA on Rain's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 03 Jul 2022 01:54:06 +0800</lastBuildDate><atom:link href="http://intervalrain.github.io/tags/ca/index.xml" rel="self" type="application/rss+xml"/><item><title>記憶體</title><link>http://intervalrain.github.io/posts/csnotes/ca/memory/</link><pubDate>Sun, 03 Jul 2022 01:54:06 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/memory/</guid><description>準備中</description></item><item><title>Pipeline</title><link>http://intervalrain.github.io/posts/csnotes/ca/pipeline/</link><pubDate>Sun, 03 Jul 2022 01:54:02 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/pipeline/</guid><description>準備中</description></item><item><title>處理器</title><link>http://intervalrain.github.io/posts/csnotes/ca/processor/</link><pubDate>Sun, 03 Jul 2022 01:53:56 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/processor/</guid><description>準備中</description></item><item><title>[CA] 計算機算術</title><link>http://intervalrain.github.io/posts/csnotes/ca/arithmetic/</link><pubDate>Sun, 03 Jul 2022 01:53:50 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/arithmetic/</guid><description>準備中</description></item><item><title>指令集架構</title><link>http://intervalrain.github.io/posts/csnotes/ca/isa/</link><pubDate>Sun, 03 Jul 2022 01:53:45 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/isa/</guid><description>準備中</description></item><item><title>[作業系統] 計算機組織與結構</title><link>http://intervalrain.github.io/posts/csnotes/ca/</link><pubDate>Sun, 03 Jul 2022 01:39:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/</guid><description>計算機組織與結構 概述 計算機抽象化 指令集架構 計算機算術 處理器 Pipeline 記憶體 參考資料 黃婷婷 清大開放式課程 計算機結構 Mr. opengate</description></item><item><title>[CA] 計算機抽象化</title><link>http://intervalrain.github.io/posts/csnotes/ca/abstraction/</link><pubDate>Thu, 24 Mar 2022 01:12:11 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/abstraction/</guid><description>計算機的抽象化與科技 電腦的定義 一種可以進行計算的裝置，特指可編程(programmable) 且可執行高速的數學或邏輯的運算，或可收集、儲存、處理資料的電子器械。 一般用途 or 特別用途 可編程 or 不可編程 科學用 or 商務 機械械 or 電子式 or 電機 &amp;hellip; Instruction 與 data 分開儲存的結構稱為 哈佛架構Harvard Architecture 電腦的歷史 ENIAC (Electronic Numberical Integrator and Calculator) 1943 - 1946 at the University of Pennsylvania 約 25 公尺長、2.5 公尺高 由真空管製成: 耗能、易燒壞KJKKI 1900個加法/每秒 商業化、電晶體的發現 in 1947 使用電晶體的電腦 (IBM 14001, Big Blue) in 1959 IC(Integrated Circuit) in 1958 at 德儀 微處理器(Intel 4004) in 1971 Apple II in 1977 個人電腦(IBM PC) in 1981 IBM 開放式系統(open system)使得周邊設備大量的發展 Xerox PARC Alto: 具備滑鼠、以太網路、點陣圖、按鍵、菜單、WYSIWYG編輯器 區域網路 雷射列印 client / server 分散式計算 應用程式 VisiCalc for Applie II in 1979 超大型積體電路 VLSI(Very-Large-Scale Integration) RISC(Reduced Instruction Set Computer) 的出現，對應於 CISC(Complex Instruction Set Computer) RISC: MIPS CISC: Intel x86 processor Post PC Era: Embedded Computer 冰箱、手機、手錶… 電腦的發展 應用 行動電腦 手機 人類基因體計畫 世界網路 搜尋引擎 摩爾定律 Moore&amp;rsquo;s Law Line Width/Feature Size: 電晶體的 Source 與 Drain 的距離，約是 gate length。 電腦的分類 通用電腦 特性： 軟體相容性 產品生命週期短 更好的效能(more transistors)與人機介面 個人電腦 Personal Computers 一般用途、軟體多樣性 取決於成本與效能的權衡 伺服器電腦 Server Computers 基於網路的 高容量、效能、可靠度 範圍可小至伺服，大至建築 超級電腦 Supercomputers 高端的科學與工程計算 最高的效能，但小的市佔 特殊用途電腦 特性： 通常沒有浮點數、記憶體管理 會與各種功能的外部裝置(peripherals)協作 e.</description></item><item><title>[計算機組織與結構] 概述</title><link>http://intervalrain.github.io/posts/csnotes/ca/intro/</link><pubDate>Wed, 23 Mar 2022 00:18:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/ca/intro/</guid><description>計算機結構簡介 二進制 從真實世界的 類比訊號 到方便儲存與傳送的 數位訊號 (Analog to Digital)。 訊號容易用 二進制 表達，在電子電路上，可以用 電子開關(Switch) 來描述(bit)。 利用 電晶體(Transistor) 其特性，可以作為一個電子開關。 現今的積體電路最常見的電晶體為 MOSFET (Metal Oxide Silicon Field Effect Transistor)。 利用閘極(Gate)控制源極(Source)與汲極(Drain)的電子通道。 電子開關 → 邏輯閘 → 邏輯電路、記憶元件 → 計算機 計算機結構/組織 計算機結構 Computer Architecture 處理器(processor) Control Datapath 記憶體(memory) 裝置(Devices) Input: 鍵盤、滑鼠、磁碟 Output: 磁碟、顯示器、影印機 計算機組織 Computer Organization(架構) 功能元件的性能: registers, ALU, shifters Structure Dataflow Control logic Register Transfer Level(RTL) description 計算機結構 Computer Architecture = Instruction Set Architecture(ISA) + Machine Organization Software 與 Hardware 間的 interface。(不同層級抽象化的協同) 因應不同的需求所設計出來的機械結構。 選用的演算法 選用的程式語言或編譯器 選用的作業系統 處理器 I/O 系統與裝置 指令集Instruction Set Architecture(ISA) 可編程的儲存量(programmable storage) 資料型別與結構：編碼與表現(Encodings and Representations) Instruction Set Instruction Formats 讀寫資料的模式與指令 例外狀況 e.</description></item></channel></rss>