<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>OS on Rain's Blog</title><link>http://intervalrain.github.io/tags/os/</link><description>Recent content in OS on Rain's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 02 Jul 2022 04:00:55 +0800</lastBuildDate><atom:link href="http://intervalrain.github.io/tags/os/index.xml" rel="self" type="application/rss+xml"/><item><title>[作業系統] Linux</title><link>http://intervalrain.github.io/posts/csnotes/linux/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/linux/</guid><description>準備中</description></item><item><title>[作業系統] 計算機作業系統</title><link>http://intervalrain.github.io/posts/csnotes/os/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/</guid><description>計算機作業系統 概述 進程管理 死鎖 記憶體管理 設備管理 鏈接 參考資料 cyc2018 Tanenbaum A S, Bos H. Modern operating systems[M]. Prentice Hall Press, 2014. 湯子灜, 哲鳳屏, 湯小丹, 計算機操作系統[M]. 西安電子科技大學出版社, 2001. Bryant, R. E., &amp;amp; O’Hallaron, D. R. (2004). Computer Systems: A Programmer&amp;rsquo;s Perspective. W. Richard Stevens. Advanced Programming in the UNIX Environment. Operating System Notes Operating-System Structures Processes Inter Process Communication Presentation[1] Decoding UCS Invicta – Part 1</description></item><item><title>[計算機作業系統] 概述</title><link>http://intervalrain.github.io/posts/csnotes/os/intro/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/intro/</guid><description>基本特徵 1. 並行計算 並行計算(concurrent computing) 是指宏觀上在一段時間內能同時運行多個進程，微觀上是交替發生的；而平行計算(parallel computing) 則指同一個時間內能運行多個指令。 平行計算需要硬體支持，如多線程(multi-thread)、多核處理器(multi-core processor)或者分散式計算機系統(distributed OS)。 作業系統通過引入進程(process)與線程(thread)，使程式能夠並行運作。 2. 共享 共享是指系統中的資源可以被多個並行進程共同使用。 有兩種共享方式：互斥共享(mutual exclusion)與同時訪問(time sharing)。 互斥共享的資源稱為臨界資源(critical resources)，例如印表機等，在同一時間內只允許一個進程訪問，需要用同步機制來實現互斥訪問。 3. 虛擬 虛擬技術把一個物理實體轉換為多個邏輯實體。 主要有兩種虛擬技術：分時技術(time sharing)、空間分享技術。 多個進程能在同一個處理器上並行處理使用了分時技術，讓每個進程輪流占用處理器，每次只執行一小個時間片段並快速切換。 虛擬記憶體使用了空間分享技術，它將物理記憶體抽象化為地址空間，每個進程都有各自的地址空間。地址空間的頁被映射到物理記憶體中，地址空間的頁並不需要全部在物理記憶體中，當使用到一個沒有物理記憶體的頁時，執行頁面置換演算法，將該頁置換到記憶體中。 4. 異步(Asynchronous) 異步指進程不是一次性執行完畢，而是走走停停，以不可知的速度向前推進。 基本功能 1. 進程管理 進程管理、進程同步、進程通信、死鎖處理、處理調度等。 2. 記憶體管理 記憶體分配、地址映射、記憶體保護與共享、虛擬記憶體等。 3. 文件管理 文件儲存空間的管理、目錄管理、文件讀寫管理和保護等。 4. 設備管理 完成用戶的 I/O 請求，方便用戶使用各種設備，並提高設備的利用率。 主要包含緩衝管理、設備分配、設備處理、虛擬設備等。 系統調用 如果一個進程在用戶模式(user mode)需要使用內核模式(kernel mode)的功能，就進行系統調用從而陷入內核，由作業系統代為完成。 Linux 的系統調用主要有以下這些： Task Commands 進程控制 fork(); exit(); wait(); 進程通信 pipe(); shmget(); mmap(); 文件操作 open(); read(); write(); 設備操作 ioctl(); read(); write(); 訊息維護 getpid(); alarm(); sleep(); 安全 chmod(); umask(); chown(); 內核與微內核 1.</description></item><item><title>[計算機作業系統] 死鎖</title><link>http://intervalrain.github.io/posts/csnotes/os/deadlock/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/deadlock/</guid><description>準備中</description></item><item><title>[計算機作業系統] 記憶體管理</title><link>http://intervalrain.github.io/posts/csnotes/os/memorymanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/memorymanagement/</guid><description>準備中</description></item><item><title>[計算機作業系統] 設備管理</title><link>http://intervalrain.github.io/posts/csnotes/os/equipmentmanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/equipmentmanagement/</guid><description>準備中</description></item><item><title>[計算機作業系統] 進程管理</title><link>http://intervalrain.github.io/posts/csnotes/os/processmanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/processmanagement/</guid><description/></item><item><title>[計算機作業系統] 鏈接</title><link>http://intervalrain.github.io/posts/csnotes/os/link/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/link/</guid><description>準備中</description></item><item><title>[OS] Lec 1 - Introduction</title><link>http://intervalrain.github.io/posts/os/lec1/</link><pubDate>Thu, 24 Feb 2022 02:43:30 +0800</pubDate><guid>http://intervalrain.github.io/posts/os/lec1/</guid><description>概觀作業系統的歷史發展與進程</description></item></channel></rss>