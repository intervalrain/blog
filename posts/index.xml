<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Rain's Blog</title><link>http://intervalrain.github.io/posts/</link><description>Recent content in Posts on Rain's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 02 Jul 2022 04:00:55 +0800</lastBuildDate><atom:link href="http://intervalrain.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>[作業系統] Linux</title><link>http://intervalrain.github.io/posts/csnotes/linux/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/linux/</guid><description>準備中</description></item><item><title>[作業系統] 計算機作業系統</title><link>http://intervalrain.github.io/posts/csnotes/os/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/</guid><description>計算機作業系統 概述 進程管理 死鎖 記憶體管理 設備管理 鏈接 參考資料 cyc2018 Tanenbaum A S, Bos H. Modern operating systems[M]. Prentice Hall Press, 2014. 湯子灜, 哲鳳屏, 湯小丹, 計算機操作系統[M]. 西安電子科技大學出版社, 2001. Bryant, R. E., &amp;amp; O’Hallaron, D. R. (2004). Computer Systems: A Programmer&amp;rsquo;s Perspective. W. Richard Stevens. Advanced Programming in the UNIX Environment. Operating System Notes Operating-System Structures Processes Inter Process Communication Presentation[1] Decoding UCS Invicta – Part 1</description></item><item><title>[計算機作業系統] 概述</title><link>http://intervalrain.github.io/posts/csnotes/os/intro/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/intro/</guid><description>基本特徵 1. 並行計算 並行計算(concurrent computing) 是指宏觀上在一段時間內能同時運行多個進程，微觀上是交替發生的；而平行計算(parallel computing) 則指同一個時間內能運行多個指令。 平行計算需要硬體支持，如多線程(multi-thread)、多核處理器(multi-core processor)或者分散式計算機系統(distributed OS)。 作業系統通過引入進程(process)與線程(thread)，使程式能夠並行運作。 2. 共享 共享是指系統中的資源可以被多個並行進程共同使用。 有兩種共享方式：互斥共享(mutual exclusion)與同時訪問(time sharing)。 互斥共享的資源稱為臨界資源(critical resources)，例如印表機等，在同一時間內只允許一個進程訪問，需要用同步機制來實現互斥訪問。 3. 虛擬 虛擬技術把一個物理實體轉換為多個邏輯實體。 主要有兩種虛擬技術：分時技術(time sharing)、空間分享技術。 多個進程能在同一個處理器上並行處理使用了分時技術，讓每個進程輪流占用處理器，每次只執行一小個時間片段並快速切換。 虛擬記憶體使用了空間分享技術，它將物理記憶體抽象化為地址空間，每個進程都有各自的地址空間。地址空間的頁被映射到物理記憶體中，地址空間的頁並不需要全部在物理記憶體中，當使用到一個沒有物理記憶體的頁時，執行頁面置換演算法，將該頁置換到記憶體中。 4. 異步(Asynchronous) 異步指進程不是一次性執行完畢，而是走走停停，以不可知的速度向前推進。 基本功能 1. 進程管理 進程管理、進程同步、進程通信、死鎖處理、處理調度等。 2. 記憶體管理 記憶體分配、地址映射、記憶體保護與共享、虛擬記憶體等。 3. 文件管理 文件儲存空間的管理、目錄管理、文件讀寫管理和保護等。 4. 設備管理 完成用戶的 I/O 請求，方便用戶使用各種設備，並提高設備的利用率。 主要包含緩衝管理、設備分配、設備處理、虛擬設備等。 系統調用 如果一個進程在用戶模式(user mode)需要使用內核模式(kernel mode)的功能，就進行系統調用從而陷入內核，由作業系統代為完成。 Linux 的系統調用主要有以下這些： Task Commands 進程控制 fork(); exit(); wait(); 進程通信 pipe(); shmget(); mmap(); 文件操作 open(); read(); write(); 設備操作 ioctl(); read(); write(); 訊息維護 getpid(); alarm(); sleep(); 安全 chmod(); umask(); chown(); 內核與微內核 1.</description></item><item><title>[計算機作業系統] 死鎖</title><link>http://intervalrain.github.io/posts/csnotes/os/deadlock/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/deadlock/</guid><description>準備中</description></item><item><title>[計算機作業系統] 記憶體管理</title><link>http://intervalrain.github.io/posts/csnotes/os/memorymanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/memorymanagement/</guid><description>準備中</description></item><item><title>[計算機作業系統] 設備管理</title><link>http://intervalrain.github.io/posts/csnotes/os/equipmentmanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/equipmentmanagement/</guid><description>準備中</description></item><item><title>[計算機作業系統] 進程管理</title><link>http://intervalrain.github.io/posts/csnotes/os/processmanagement/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/processmanagement/</guid><description/></item><item><title>[計算機作業系統] 鏈接</title><link>http://intervalrain.github.io/posts/csnotes/os/link/</link><pubDate>Sat, 02 Jul 2022 04:00:55 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/os/link/</guid><description>準備中</description></item><item><title>CS 學習筆記</title><link>http://intervalrain.github.io/posts/csnotes/</link><pubDate>Sat, 02 Jul 2022 03:01:48 +0800</pubDate><guid>http://intervalrain.github.io/posts/csnotes/</guid><description> 演算法 Leetcode 演算法 作業系統 計算機作業系統 Linux 網路 計算機網路 HTTP Socket 資料庫 資料庫系統原理 SQL 語法 SQL 練習 MySQL Redis Java Java 基礎 Java 容器 Java 開發 Java 虛擬機 Java I/O 系統設計 系統設計基礎 分布式 集群 駭客技術 緩存 訊息佇列 物件導向 物件導向概念 設計模式 工具 Git Docker 框架 正則表達式 程式碼實踐 程式碼可讀性 程式碼格規範</description></item><item><title>[ML] introduction</title><link>http://intervalrain.github.io/posts/ml/lec0/</link><pubDate>Sun, 19 Jun 2022 18:18:52 +0800</pubDate><guid>http://intervalrain.github.io/posts/ml/lec0/</guid><description>Introduction to Machine Learning</description></item><item><title>[Life] Some change of road to SWE</title><link>http://intervalrain.github.io/posts/life/nikita_kothari/</link><pubDate>Tue, 14 Jun 2022 22:43:59 +0800</pubDate><guid>http://intervalrain.github.io/posts/life/nikita_kothari/</guid><description>Suggestion from Nikita Kothari at LinkedIn</description></item><item><title>[C++] The C++ Standard Template Library(STL) - deque</title><link>http://intervalrain.github.io/posts/c++/stl_deque/</link><pubDate>Sun, 12 Jun 2022 01:36:18 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_deque/</guid><description>Introduction to deque</description></item><item><title>[C++] Custom Comparator</title><link>http://intervalrain.github.io/posts/c++/custom_comparator/</link><pubDate>Sat, 11 Jun 2022 10:07:49 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/custom_comparator/</guid><description>Custom comparator for sorting algorithm and priority_queue</description></item><item><title>[C++] The C++ Standard Template Library(STL) - pair</title><link>http://intervalrain.github.io/posts/c++/stl_pair/</link><pubDate>Thu, 02 Jun 2022 01:23:15 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_pair/</guid><description>Introduction to pair</description></item><item><title>[VHDL] HDLbits 1 - Getting Started</title><link>http://intervalrain.github.io/posts/verilog/hdlbits1/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits1/</guid><description>Verilog tutorial</description></item><item><title>[VHDL] HDLbits 2 - Verilog Language</title><link>http://intervalrain.github.io/posts/verilog/hdlbits2/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits2/</guid><description>Verilog tutorial</description></item><item><title>[VHDL] HDLbits 3 - Circuits</title><link>http://intervalrain.github.io/posts/verilog/hdlbits3/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits3/</guid><description>Verilog tutorial</description></item><item><title>[VHDL] HDLbits 4 - Verification: Reading Simulations</title><link>http://intervalrain.github.io/posts/verilog/hdlbits4/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits4/</guid><description>Verilog tutorial</description></item><item><title>[VHDL] HDLbits 5 - Verification: Writing Testbenches</title><link>http://intervalrain.github.io/posts/verilog/hdlbits5/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits5/</guid><description>Verilog tutorial</description></item><item><title>[VHDL] HDLbits 6 - CS450</title><link>http://intervalrain.github.io/posts/verilog/hdlbits6/</link><pubDate>Sat, 28 May 2022 00:10:20 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/hdlbits6/</guid><description>Verilog tutorial</description></item><item><title>[TCAD] 模擬收斂問題</title><link>http://intervalrain.github.io/posts/device/simulationconvergece/</link><pubDate>Wed, 25 May 2022 22:52:15 +0800</pubDate><guid>http://intervalrain.github.io/posts/device/simulationconvergece/</guid><description>TCAD simulation convergence problem</description></item><item><title>[VHDL] Verilog Hardware Description Language</title><link>http://intervalrain.github.io/posts/verilog/intro/</link><pubDate>Sun, 01 May 2022 17:37:22 +0800</pubDate><guid>http://intervalrain.github.io/posts/verilog/intro/</guid><description>1 Verilog HDL 1.1 Verilog 簡介 一套硬體描述語言 輔助設計數位系統 描述電路的行為 電子自動化工具 類似C語言的硬體描述語言 易學、容易接受 高階行為描述 切勿使用軟體思維(循序)撰寫(硬體描述語言多是並行的) 支援多種硬體層級的描述方式 從低階到高階模式 依照不同的方法設計 支援階層式的設計方法 樹狀式的設計結構 由繁化簡 1.2 Verilog 的模型 1.2.1 電晶體層級 Transistor Level 或低階交換層次模型(Switch Level Model) Verilog 最低階的層次模型 電路是由開關與電晶體所組成 一般不會採取低階的層級來進行設計 1.2.2 邏輯閘層級 Gate Level 使用基本的邏輯閘元件 AND、OR、NOT 邏輯電路圖 1.2.3 資料流層級 Data Flow Level 描述電路中資料的處理方式 資料如何在電路中運算及傳送 輸入持續驅動輸出 運算式 如：out = a + b + c 1.2.4 行為模型 Behavior Level Verilog 最高階的層次模型 不需考慮硬體元件的特型，只需放在模組的功能描述 很像 C 語言 合成軟體工具 1.2.5 結構式模型 Structure Level 引用硬體模組的模式 類似邏輯閘層次模型 支援階層式設計法 將複雜電路分為層狀結構 架構上類似樹狀結構 Bottom-up：元件→子模組→設計目標 Top-Down：設計目標→子模組→元件 Mixed：設計目標→子模組←元件(常用於大型複雜系統) \( \boxed{\text{Full Adder}} \begin{cases} \boxed{\text{Half Adder}} \begin{cases} \boxed{\text{XOR}}\\ \boxed{\text{AND}} \end{cases}\\ \boxed{\text{Half Adder}} \begin{cases} \boxed{\text{XOR}}\\ \boxed{\text{AND}} \end{cases}\\ \boxed{\text{OR}} \end{cases}\\ \text{設計目標}\qquad\qquad\text{子模組}\qquad\text{元件} \) 1.</description></item><item><title>[Java] 淺談 Java MVC</title><link>http://intervalrain.github.io/posts/java/java_mvc/</link><pubDate>Fri, 29 Apr 2022 15:38:18 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/java_mvc/</guid><description>Introduction to Java MVC.</description></item><item><title>[IT] Introduction to Microservices, Docker and Kubernetes</title><link>http://intervalrain.github.io/posts/it/microservices_docker_kubernetes/</link><pubDate>Fri, 29 Apr 2022 11:40:10 +0800</pubDate><guid>http://intervalrain.github.io/posts/it/microservices_docker_kubernetes/</guid><description>Desc Text.</description></item><item><title>[C++] The C++ Standard Template Library(STL) - map</title><link>http://intervalrain.github.io/posts/c++/stl_map/</link><pubDate>Sat, 23 Apr 2022 22:24:21 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_map/</guid><description>Introduction to map.</description></item><item><title>[C++] 如何產生 random 值</title><link>http://intervalrain.github.io/posts/c++/random/</link><pubDate>Sat, 23 Apr 2022 17:46:23 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/random/</guid><description>How to generate a random value</description></item><item><title>[Java] HashMap中的hashCode設計原理</title><link>http://intervalrain.github.io/posts/java/hashmap/hashcode/</link><pubDate>Fri, 22 Apr 2022 11:22:39 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/hashmap/hashcode/</guid><description>why hashcode &amp;gt;&amp;gt;&amp;gt; 16</description></item><item><title>[C++]易錯題目收集</title><link>http://intervalrain.github.io/posts/c++/question/</link><pubDate>Sun, 17 Apr 2022 17:34:39 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/question/</guid><description>Collections of C++ problems</description></item><item><title>[C++] The C++ Standard Template Library(STL) - list, forward_list</title><link>http://intervalrain.github.io/posts/c++/stl_list/</link><pubDate>Sun, 17 Apr 2022 11:45:58 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_list/</guid><description>Introduction to list and forward_list</description></item><item><title>[C++] The C++ Standard Template Library(STL) - vector</title><link>http://intervalrain.github.io/posts/c++/stl_vector/</link><pubDate>Sat, 16 Apr 2022 22:08:37 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_vector/</guid><description>Introduction to vector</description></item><item><title>[C++] The C++ Standard Template Library(STL) - Container</title><link>http://intervalrain.github.io/posts/c++/stl_container/</link><pubDate>Fri, 15 Apr 2022 01:09:18 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_container/</guid><description>Introduction to containers in STL</description></item><item><title>[IDAS+] Optimize Summary Table Function</title><link>http://intervalrain.github.io/posts/vba/idas+_record/</link><pubDate>Thu, 14 Apr 2022 00:39:50 +0800</pubDate><guid>http://intervalrain.github.io/posts/vba/idas+_record/</guid><description>An implementation of dictionary in VBA for searching algorithm</description></item><item><title>[C++] Cout functions</title><link>http://intervalrain.github.io/posts/c++/cout/</link><pubDate>Fri, 08 Apr 2022 10:20:38 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/cout/</guid><description>Functions for cout lib</description></item><item><title>[C++] The C++ Standard Template Library(STL) - Algorithm</title><link>http://intervalrain.github.io/posts/c++/stl_algo/</link><pubDate>Wed, 06 Apr 2022 16:04:36 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl_algo/</guid><description>Introduction to algorithms in STL</description></item><item><title>[C++] The C++ Standard Template Library(STL)</title><link>http://intervalrain.github.io/posts/c++/stl/</link><pubDate>Tue, 05 Apr 2022 01:09:42 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/stl/</guid><description>Introduction to STL</description></item><item><title>[C++] STL: Vector 的使用與實作</title><link>http://intervalrain.github.io/posts/c++/vector/</link><pubDate>Sun, 03 Apr 2022 18:14:14 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/vector/</guid><description>STL整理</description></item><item><title>[TCAD] 工具語言</title><link>http://intervalrain.github.io/posts/device/tcad/</link><pubDate>Sat, 26 Mar 2022 21:46:26 +0800</pubDate><guid>http://intervalrain.github.io/posts/device/tcad/</guid><description>TCAD learning notes</description></item><item><title>[CA] Lec 1 - Computer Abstraction and Technology</title><link>http://intervalrain.github.io/posts/ca/lec1/</link><pubDate>Thu, 24 Mar 2022 01:12:11 +0800</pubDate><guid>http://intervalrain.github.io/posts/ca/lec1/</guid><description>History of computer</description></item><item><title>[CA] Lec 0 - Introduction to Computer Architecture</title><link>http://intervalrain.github.io/posts/ca/lec0/</link><pubDate>Wed, 23 Mar 2022 00:18:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/ca/lec0/</guid><description>Introduction to Computer Architecture</description></item><item><title>[Algorithm] Maximum Frequency Stack 最大頻率堆疊</title><link>http://intervalrain.github.io/posts/algorithm/freqstack/</link><pubDate>Sat, 19 Mar 2022 16:53:23 +0800</pubDate><guid>http://intervalrain.github.io/posts/algorithm/freqstack/</guid><description>Maximum Frequency Stack algorithm</description></item><item><title>[Java] 面試常見問題</title><link>http://intervalrain.github.io/posts/java/interviewq/</link><pubDate>Wed, 16 Mar 2022 02:45:45 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/interviewq/</guid><description>針對Java常見面試考題整理，持續更新。</description></item><item><title>[CS50] Lec 1 - C</title><link>http://intervalrain.github.io/posts/cs50/lec1/</link><pubDate>Thu, 10 Mar 2022 02:39:12 +0800</pubDate><guid>http://intervalrain.github.io/posts/cs50/lec1/</guid><description>Introduction to programming language C</description></item><item><title>[Java] transient 關鍵字</title><link>http://intervalrain.github.io/posts/java/transient/</link><pubDate>Tue, 08 Mar 2022 23:53:27 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/transient/</guid><description>Introduction to keyword transient</description></item><item><title>[Device] Mismatch Introduction</title><link>http://intervalrain.github.io/posts/device/mismatch/</link><pubDate>Sat, 05 Mar 2022 21:40:03 +0800</pubDate><guid>http://intervalrain.github.io/posts/device/mismatch/</guid><description>Device mismatch intro.</description></item><item><title>[C++] How to Initialize vector in C++</title><link>http://intervalrain.github.io/posts/c++/newvector/</link><pubDate>Thu, 03 Mar 2022 01:33:02 +0800</pubDate><guid>http://intervalrain.github.io/posts/c++/newvector/</guid><description>Desc Text.</description></item><item><title>[Java] Integer.bitCount 解析</title><link>http://intervalrain.github.io/posts/java/bitcount/</link><pubDate>Tue, 01 Mar 2022 20:37:02 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/bitcount/</guid><description>Desc Text.</description></item><item><title>[OS] Lec 1 - Introduction</title><link>http://intervalrain.github.io/posts/os/lec1/</link><pubDate>Thu, 24 Feb 2022 02:43:30 +0800</pubDate><guid>http://intervalrain.github.io/posts/os/lec1/</guid><description>概觀作業系統的歷史發展與進程</description></item><item><title>[Java] Java 的中 HashMap.comparableClassFor(Object x) 的函式解讀</title><link>http://intervalrain.github.io/posts/java/hashmap/hashmap/</link><pubDate>Wed, 23 Feb 2022 01:36:40 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/hashmap/hashmap/</guid><description>認識泛型 generic type、類別 class</description></item><item><title>[CS50] Lec 0 - Introduction to Computer Science</title><link>http://intervalrain.github.io/posts/cs50/lec0/</link><pubDate>Wed, 23 Feb 2022 00:43:18 +0800</pubDate><guid>http://intervalrain.github.io/posts/cs50/lec0/</guid><description>Intoduction to Computer Science</description></item><item><title>[ghpage] 在 GitHub Pages 中渲染 KaTex 公式</title><link>http://intervalrain.github.io/posts/ghpage/latexrendering/</link><pubDate>Tue, 22 Feb 2022 01:38:30 +0800</pubDate><guid>http://intervalrain.github.io/posts/ghpage/latexrendering/</guid><description>如何讓 GitHub Pages 中支援 Latex 語法</description></item><item><title>[Device] Ring Oscillator 環形振盪器</title><link>http://intervalrain.github.io/posts/device/ringoscillator/</link><pubDate>Mon, 21 Feb 2022 01:29:24 +0800</pubDate><guid>http://intervalrain.github.io/posts/device/ringoscillator/</guid><description>A ring circuit with an odd numbers of inverters</description></item><item><title>[Java] List of list of something equality</title><link>http://intervalrain.github.io/posts/java/listequal/</link><pubDate>Fri, 18 Feb 2022 08:59:45 +0800</pubDate><guid>http://intervalrain.github.io/posts/java/listequal/</guid><description>Common Test methodology in Leetcode</description></item><item><title>About me</title><link>http://intervalrain.github.io/posts/aboutme/</link><pubDate>Thu, 17 Feb 2022 17:54:48 +0800</pubDate><guid>http://intervalrain.github.io/posts/aboutme/</guid><description>Who am I?</description></item><item><title>Hello World</title><link>http://intervalrain.github.io/posts/helloworld/</link><pubDate>Thu, 17 Feb 2022 15:15:36 +0800</pubDate><guid>http://intervalrain.github.io/posts/helloworld/</guid><description>How to hello world?</description></item><item><title>[Logic Design] Lec 1 - 數字系統與轉換</title><link>http://intervalrain.github.io/posts/logicdesign/lec1/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec1/</guid><description>Introduction to number systems in computer</description></item><item><title>[Logic Design] Lec 2 - 布林代數</title><link>http://intervalrain.github.io/posts/logicdesign/lec2/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec2/</guid><description>Boolean Algebra operation and theory</description></item><item><title>[Logic Design] Lec 3 - Minterm 與 Maxterm 展開</title><link>http://intervalrain.github.io/posts/logicdesign/lec3/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec3/</guid><description>Minterm and Maxterm expression</description></item><item><title>[Logic Design] Lec 4 - 卡諾圖 Karnaugh Maps</title><link>http://intervalrain.github.io/posts/logicdesign/lec4/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec4/</guid><description>Simplify Boolean function with K-map</description></item><item><title>[Logic Design] Lec 5 - Quine-McClusky Method</title><link>http://intervalrain.github.io/posts/logicdesign/lec5/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec5/</guid><description>Quine-McClusky method - systematic method to simplify boolean algebra for computer.</description></item><item><title>[Logic Design] Lec 6 - Multi-Level Gate Circuits / NAND and NOR Gates</title><link>http://intervalrain.github.io/posts/logicdesign/lec6/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec6/</guid><description>Multi-level gate circuits. nand gates and nor gates introduction.</description></item><item><title>[Logic Design] Lec 7 - 組合電路設計與模擬</title><link>http://intervalrain.github.io/posts/logicdesign/lec7/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec7/</guid><description>Combinational Circuit Design and Simulation Using Gates</description></item><item><title>[Logic Design] Lec 8 - 多工器、編碼器、可程式化邏輯元件</title><link>http://intervalrain.github.io/posts/logicdesign/lec8/</link><pubDate>Sat, 18 Sep 2021 03:11:35 +0800</pubDate><guid>http://intervalrain.github.io/posts/logicdesign/lec8/</guid><description>Combinational Circuit Design and Simulation</description></item><item><title>[Washam] Way to Software Engineer</title><link>http://intervalrain.github.io/posts/washam/</link><pubDate>Sat, 25 May 2019 22:35:48 +0800</pubDate><guid>http://intervalrain.github.io/posts/washam/</guid><description>Desc Text.</description></item></channel></rss>